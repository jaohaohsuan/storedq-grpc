syntax = "proto3";

import "scalapb/scalapb.proto";

package com.grandsys.inu.storedq;

option (scalapb.options) = {
    single_file: true
    preamble: "sealed trait Clause"
};

enum Occurrence {
    MUST = 0;
    MUST_NOT = 1;
    SHOULD = 2;
}

enum Operator {
    OR = 0;
    AND = 1;
}

message MatchClause {
    option (scalapb.message).extends = "Clause";
    string query = 1;
    string field = 2;
    Operator operator = 3;
}

message SpanNearClause {
    option (scalapb.message).extends = "Clause";
    string query = 1;
    string field = 2;
    int32 slop = 3;
    bool in_order = 4;
}

message ReferencedClause {
    option (scalapb.message).extends = "Clause";
    string id = 1;
    string name = 2;
    map<string, BoolClause> clauses = 3;
}

message BoolClause {
    Occurrence occurrence = 1;
    oneof clause {
        MatchClause match = 6;
        SpanNearClause span_near = 7;
        ReferencedClause reference = 8;
    }
}

message StoredQuery {
    string id = 1;
    string title = 2;
    repeated string tags = 3;
    map<string, BoolClause> clauses = 4;
}

message DirectedEdge {
    option (scalapb.message).extends = "com.grandsys.inu.algorithm.DAG.Edge";
    string start = 1;
    string end = 2;
}

message StoredQueriesState {
    map<string, StoredQuery> items = 1;
    map<string, DirectedEdge> paths = 2;
}
